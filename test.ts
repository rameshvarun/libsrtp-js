const libsrtp = require(".");

it("Initializes module.", async () => {
  await libsrtp.init();
});

it("Creates a session.", async () => {
  await libsrtp.init();
  let session = new libsrtp.Session();
  session.destroy();
});

const SRTP_PLAINTEXT = new Uint8Array([
  0x80, 0x0f, 0x12, 0x34, 0xde, 0xca, 0xfb, 0xad,
  0xca, 0xfe, 0xba, 0xbe, 0xab, 0xab, 0xab, 0xab,
  0xab, 0xab, 0xab, 0xab, 0xab, 0xab, 0xab, 0xab,
  0xab, 0xab, 0xab, 0xab
]);

const SRTP_CIPHERTEXT = new Uint8Array([
  0x80, 0x0f, 0x12, 0x34, 0xde, 0xca, 0xfb, 0xad,
  0xca, 0xfe, 0xba, 0xbe, 0x4e, 0x55, 0xdc, 0x4c,
  0xe7, 0x99, 0x78, 0xd8, 0x8c, 0xa4, 0xd2, 0x15,
  0x94, 0x9d, 0x24, 0x02, 0xb7, 0x8d, 0x6a, 0xcc,
  0x99, 0xea, 0x17, 0x9b, 0x8d, 0xbb
]);

const TEST_KEY = new Uint8Array([
    0xe1, 0xf9, 0x7a, 0x0d, 0x3e, 0x01, 0x8b, 0xe0,
    0xd6, 0x4f, 0xa3, 0x2c, 0x06, 0xde, 0x41, 0x39,
    0x0e, 0xc6, 0x75, 0xad, 0x49, 0x8a, 0xfe, 0xeb,
    0xb6, 0x96, 0x0b, 0x3a, 0xab, 0xe6, 0xc1, 0x73,
    0xc3, 0x17, 0xf2, 0xda, 0xbe, 0x35, 0x77, 0x93,
    0xb6, 0x96, 0x0b, 0x3a, 0xab, 0xe6
])

it("Protects a packet.", async () => {
  await libsrtp.init();
  let session = new libsrtp.Session();
  session.destroy();
});
